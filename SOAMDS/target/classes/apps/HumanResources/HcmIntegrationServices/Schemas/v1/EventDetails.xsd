<?xml version= '1.0' encoding= 'UTF-8' ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://xmlns.oracle.com/EventDetails"
     xmlns="http://xmlns.oracle.com/EventDetails" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
     xmlns:custom="http://xmlns.oracle.com/CustomEventDetails">
    <xs:include schemaLocation="CustomEventDetails.xsd"/>
    <xs:element name="eventMessages">
        <xs:annotation id="EventMessageDesc">
            <xs:documentation>Contains all the elements related to the Event Message.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="header" minOccurs="1" maxOccurs="1"/>
                <xs:element ref="eventMessage" maxOccurs="1" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="header">
        <xs:annotation id="EventActionHeaders">
            <xs:documentation>Event Action headers, used for generating respective event.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="serviceName" type="xs:string" minOccurs="1" maxOccurs="1">
                    <xs:annotation id="ServiceName">
                        <xs:documentation>Name of the Service where the Event has occurred
                            e.g. CreditRatingService
                            Also used by the CEF to fetch request related data
                            from the database (if value of &apos;isDetailsRequired&apos;
                            element is &apos;Y&apos; and &apos;queryDetailsBy&apos; value is &apos;1&apos; or 
                            &apos;2&apos; or &apos;3&apos; or &apos;4&apos;)</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="callingComponent" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="CallingComponet">
                        <xs:documentation>Component which is calling the Common Event Handler eg. Composite, OSB,
       Custom Java Application.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="eventID" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="EventID">
                        <xs:documentation>Id of the Event that needs to be generated.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="eventType" type="xs:string" minOccurs="0" maxOccurs="1">
                    <xs:annotation id="EventType">
                        <xs:documentation>Type of the Event to be generated. &apos;ErrorEvent&apos; to
                            generate error event. &apos;LoggingEvent&apos; to generate
                            logging event. &apos;NotificationEvent&apos; to generate
                            notification event.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="GUID" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="GUID">
                        <xs:documentation>Global unique ID used across the complete life cycle of the message over
       diffenent containers. Is used for End to End visibility.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isDetailsRequired" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsDetailsRequiredComplex">
                        <xs:documentation>Contains the elements which inform the CEF that the
                            payload has the complete information about the
                            Actions to be performed or it needs to be fetched
                            from the Database.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="isDetailsRequired" type="xs:string" default="N" maxOccurs="1"
                                 minOccurs="1">
                                <xs:annotation id="IsDetailsRequired">
                                    <xs:documentation>Element inform the CEF that the payload
                                        has the complete information about the
                                        Actions to be performed or it needs to
                                        be fetched from the Database. It has two
                                        possible values. &apos;Y&apos; which informs that
                                        the data need to be fetched from
                                        Database based on Service Name, Error
                                        Code or Special Query Id. &apos;N&apos; implies
                                        that the all the required data for the
                                        processing is present in the request
                                        payload. If the element is empty
                                        considered as &apos;N&apos;.</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="queryDetailsBy" type="xs:string" maxOccurs="1" minOccurs="1">
                                <xs:annotation id="queryDetailsBy">
                                    <xs:documentation>Element inform the Event Handling
                                        framework by which columns data need to
                                        fetch from database.
                                        It has 7 possible values,
                                        &apos;1&apos; : Query by ServiceName
                                        &apos;2&apos; : Query by ServiceName and ErrorCode
                                        &apos;3&apos; : Query by ServiceName and ErrorCode
                                        and SpQueryId
                                        &apos;4&apos; : Query by Service Name and SpQueryId
                                        &apos;5&apos; : Query by ErrorCode and SpQueryId
                                        &apos;6&apos; : Query by ErrorCode
                                        &apos;7&apos; : Query by SpQueryId</xs:documentation>
                                </xs:annotation>
                            </xs:element>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="spQueryId" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="spQueryId">
                        <xs:documentation>Used by the CEF to fetch request related data from
                            the database (if value of &apos;isDetailsRequired&apos;
                            element is &apos;Y&apos; and &apos;queryDetailsBy&apos; value is &apos;3&apos; or 
                            &apos;4&apos; or &apos;5&apos; or &apos;7&apos;)</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="eventMessage">
        <xs:annotation id="EventMessage">
            <xs:documentation>Contains all the elements related to the Event Message other than header
    elements.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="errorEvent" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="customEvent" maxOccurs="1" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="errorEvent">
        <xs:annotation id="ErrorEvent">
            <xs:documentation>Contains all the elements related to the Error Event details.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="instanceId" type="xs:integer" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="InstanceId">
                        <xs:documentation>Instance id of the Service for which message to be logged. This id is
       specific to the container.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="errorCode" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="ErrorCode">
                        <xs:documentation>Error code generated by the container.
                            Also used by the CEF to fetch request related data
                            from the database (if value of &apos;isDetailsRequired&apos;
                            element is &apos;Y&apos; and &apos;queryDetailsBy&apos; value is &apos;2&apos; or 
                            &apos;3&apos; or &apos;5&apos; or &apos;6&apos;)</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="errorDetails" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="ErrorDetails">
                        <xs:documentation>Details about the error message.Normally contains StackTrace of the error</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="timeStamp" type="xs:dateTime" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="TimeStamp">
                        <xs:documentation>Timestamp at the time of error generation.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="errorSummary" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="ErrorSummary">
                        <xs:documentation>Summary about the error.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="payload" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="Payload">
                        <xs:documentation>Is the Payload of the Service which is calling the Framework and need to
       persists the Payload for further processing.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="logging" maxOccurs="1" minOccurs="0"/>
                <xs:element ref="tracking" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="Tracking">
                        <xs:documentation>Tracking details.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element ref="notification" maxOccurs="1" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="logging">
        <xs:annotation id="Logging">
            <xs:documentation>Contains all the elements related to the Logging details.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="isError" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsLogError">
                        <xs:documentation>Tells the CEF wither the log message is an error log
                            message. Possible values are N or Y.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="loggingFileName" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="LogFileName">
                        <xs:documentation>Name of the file where logs are to be added. Default
                            is &lt;eventMessages.header.serviceName&gt;.log</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="loggingFileLocation" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="LogFileLocation">
                        <xs:documentation>Location where log file to be placed.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="loggingStorageType" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="LogStorageType">
                        <xs:documentation>Destination where logs are to be stored. Has 3
                            possible values,
                            FILE to save logs in file system.
                            DB to save the logs in Database table.
                            ALL to save the logs at both in File system as well
                            as Database.
                            Default Storage is DB, which can be modified at
                            runtime from EM console by modifying
                            &apos;STORAGE_TYPE_DEFAULT&apos; preference value.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isLoggingRequired" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsLoggingRequired">
                        <xs:documentation>Logging is required or not.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="loggingSummary" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="LoggingSummary">
                        <xs:documentation>Summary of the log message.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="loggingDetails" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="LogDetails">
                        <xs:documentation>Details of the log message</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="notification">
        <xs:annotation id="Notification">
            <xs:documentation>Contains all the elements related to the Notification details.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element name="isError" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsError">
                        <xs:documentation>Tells the CEF wither the notification message is an error notification message</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="imBody" type="xs:string" default="No Body" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IMBody">
                        <xs:documentation>This will contain the Message to be sent as an Instant Message through a
       messenger.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="imTo" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IMTo">
                        <xs:documentation>The IM id of the person to whom an instant message has to be sent to.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="voiceMessage" type="xs:string" default="No Voice message" maxOccurs="1"
                     minOccurs="0">
                    <xs:annotation id="VoiceMessage">
                        <xs:documentation>This will contain the Voice Message to be sent through a messenger.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="smsSubject" type="xs:string" default="No Subject" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="SubjectSMS">
                        <xs:documentation>The subject of sms to be sent.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="smsTo" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="SMSTo">
                        <xs:documentation>Mobile number to send the SMS.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="smsFrom" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="SMSFrom">
                        <xs:documentation>The mobile number from where the SMS will be sent.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="smsBody" type="xs:string" default="No Body" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="SMSBody">
                        <xs:documentation>The contents of the sms to be sent.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="emailSubject" type="xs:string" default="No Subject" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="EmailSubject">
                        <xs:documentation>The subject of the email to be sent.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="emailBody" type="xs:string" default="No Body" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="EmailBody">
                        <xs:documentation>The body of the email to be sent.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="emailID" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="EmailID">
                        <xs:documentation>Email address of user. To send the notification mail.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isEmailPeriodic" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsEmailPeriodic">
                        <xs:documentation>Email address of user. To send the notification mail.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isEmail" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsEMAIL">
                        <xs:documentation>Is Email needs to be sent as a part of Notification.
                            Value will be either Y or N</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isSMS" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsSMS">
                        <xs:documentation>Is SMS needs to be sent as a part of Notification.
                            Value will be either Y or N</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isIM" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsIM">
                        <xs:documentation>Is IM needs to be sent as a part of Notification.
                            Value will be either Y or N</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isVoice" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsVoice">
                        <xs:documentation>Is Voice message needs to be sent as a part of
                            Notification or not. Value will be either Y or N</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isHumanIntervention" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsHumanIntervention">
                        <xs:documentation>Is Human Task needs to be created as a part of
                            Notification. Value will be either Y or N</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="humanWorkflowGroups" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="HumanWorkflowGroups">
                        <xs:documentation>Groups or the users to be notified in case of a
                            Human task. In case of multiple values, the
                            information can be passed as Comma separated.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="humanTaskDetails" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="HumanTaskDetails">
                        <xs:documentation>Groups or the users to be notified in case of a
                            Human task. In case of multiple values, the
                            information can be passed as Comma separated.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isNotificationRequired" type="xs:string" default="N" maxOccurs="1"
                     minOccurs="0">
                    <xs:annotation id="IsNotificationRequired">
                        <xs:documentation>Notification is required or not.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="notificationSubject" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="NotificationSubject">
                        <xs:documentation>What subject will be send to user as a notification
                            will store in this variable.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="notificationDetails" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="NotificationDetails">
                        <xs:documentation>What details will be send to user as a notification
                            will store in this variable.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isPNGeneric" type="xs:string" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsPNGeneric">
                        <xs:documentation>Inform that current message need to be sent as a part of general Priodic Notification or not.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xsd:element name="tracking">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="trackingSummary" type="xs:string" minOccurs="0" maxOccurs="1">
                    <xs:annotation id="TrackingSummary">
                        <xs:documentation>Summary of the track message.</xs:documentation>
                    </xs:annotation>
                </xsd:element>
                <xsd:element name="trackingDetails" type="xs:string" minOccurs="0" maxOccurs="1">
                    <xs:annotation id="TrackingDetails">
                        <xs:documentation>Details of the track message.</xs:documentation>
                    </xs:annotation>
                </xsd:element>
                <xsd:element name="appTrackingID" type="xs:string" minOccurs="0" maxOccurs="1">
                    <xs:annotation id="AppTrackingID">
                        <xs:documentation>This is unique ID of the entity within Source
                            Application/Service</xs:documentation>
                    </xs:annotation>
                </xsd:element>
                <xsd:element name="invocationPoint" type="xs:string" minOccurs="0" maxOccurs="1">
                    <xs:annotation id="InvocationPoint">
                        <xs:documentation>Point in the Message flow from where the tracking
                            event is invoked.</xs:documentation>
                    </xs:annotation>
                </xsd:element>
                <xsd:element name="msgTrackingID" type="xs:string" minOccurs="1" maxOccurs="1">
                    <xs:annotation id="MsgTrackingID">
                        <xs:documentation>Is used for End to End visibility</xs:documentation>
                    </xs:annotation>
                </xsd:element>
                <xs:element name="isError" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="IsTrackError">
                        <xs:documentation>Tracked message is an Error message. Possible values
                            are N or Y.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="isTrackingRequired" type="xs:string" default="N" maxOccurs="1" minOccurs="0">
                    <xs:annotation id="isTrackingRequired">
                        <xs:documentation>This field will be used when the message is coming from ErrorEvent to decide that the message to be tracked or not.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
</xs:schema>
